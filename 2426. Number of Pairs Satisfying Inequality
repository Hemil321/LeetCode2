#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define pbds tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>

class Solution {
public:
    long long numberOfPairs(vector<int>& nums1, vector<int>& nums2, int diff) {
        pbds st;
        st.insert(nums1.back() - nums2.back() + diff);
        long long n = nums2.size(), ans = 0;
        for(int i = n - 2; i >= 0; i--){
            int val = nums1[i] - nums2[i];
            ans += st.size() - st.order_of_key(val);
            st.insert(val + diff);
        }
        return ans;
    }
};
